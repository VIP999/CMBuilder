#!/bin/bash
. scripts/functions
clear

BUILD_DEPENDENCIES="oracle-java6-installer git-core lzop ccache gnupg flex bison gperf build-essential zip curl zlib1g-dev zlib1g-dev:i386 libc6-dev lib32ncurses5 lib32z1 lib32bz2-1.0 lib32ncurses5-dev x11proto-core-dev libx11-dev:i386 libreadline6-dev:i386 lib32z1-dev libgl1-mesa-glx:i386 libgl1-mesa-dev g++-multilib mingw32 tofrodos python-markdown libxml2-utils xsltproc readline-common libreadline6-dev libreadline6 lib32readline-gplv2-dev libncurses5-dev lib32readline5 lib32readline6 libreadline-dev libreadline6-dev:i386 libreadline6:i386 bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev lib32bz2-dev libsdl1.2-dev libesd0-dev squashfs-tools pngcrush schedtool libwxgtk2.8-dev python gcc g++ cpp gcc-4.8 g++-4.8"

echo

# SDK is installed

echo -n -e " Installed SDK: "
if [ -d "android-sdk-linux" ]; then
	echo -e "${COLOR_Green}YES${COLOR_Wipe}"
else
	echo -e "${COLOR_Red}NO${COLOR_Wipe}"
fi

echo -n -e " Installed SDK build-tools: "
if [ -d "android-sdk-linux/build-tools" ]; then
	echo -e "${COLOR_Green}YES${COLOR_Wipe}"
else
	echo -e "${COLOR_Red}NO${COLOR_Wipe}"
fi

ANDROID_TOOLS="adb fastboot"
for package in $ANDROID_TOOLS
do
	echo -n -e " Installed "
	if dpkg -s android-tools-$package 2>/dev/null | grep -q -i "install ok installed"; then
		echo -e "$package: ${COLOR_Green}YES${COLOR_Wipe}"
	else
		echo -e "$package: ${COLOR_Red}NO${COLOR_Wipe}"
	fi
done

# Check for dependencies
INSTALLED_DEPENDENCIES=0
NUMBER_DEPENDENCIES=0

echo -n -e " Installed dependencies: "
for package in $BUILD_DEPENDENCIES
do
	((NUMBER_DEPENDENCIES++))
	if dpkg -s "$package" 2>/dev/null | grep -q -i "install ok installed"; then
		((INSTALLED_DEPENDENCIES++))
	fi
done
if [ $INSTALLED_DEPENDENCIES == $NUMBER_DEPENDENCIES ]; then
	echo -e "[${COLOR_Green}$INSTALLED_DEPENDENCIES${COLOR_Wipe}/$NUMBER_DEPENDENCIES]"
else
	echo -e "[${COLOR_Red}$INSTALLED_DEPENDENCIES${COLOR_Wipe}/$NUMBER_DEPENDENCIES]"
fi


# Repo
echo -n -e " Installed repo command: "
if [ -f ~/bin/repo ]; then
	echo -e "${COLOR_Green}YES${COLOR_Wipe}"
else
	echo -e "${COLOR_Red}NO${COLOR_Wipe}"
fi


# Git
GIT_Configured=1

echo -n -e " Git configured: "
git config --list | grep -q -i "user.name="
if [ ! $? == 0 ]; then GIT_Configured=0; fi

git config --list | grep -q -i "user.email="
if [ ! $? == 0 ]; then GIT_Configured=0; fi

if [ $GIT_Configured == 1 ]; then
	echo -e "${COLOR_Green}YES${COLOR_Wipe}"
else
	echo -e "${COLOR_Red}NO${COLOR_Wipe}"
fi

echo
F_PressEnter
